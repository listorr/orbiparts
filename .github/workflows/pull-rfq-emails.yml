name: Pull RFQ Emails (Supabase)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/5 * * * *"

jobs:
  run-pull:
    runs-on: ubuntu-latest
    steps:
      - name: Fail early if secrets are missing
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          set -euo pipefail
          if [ -z "${SUPABASE_URL:-}" ]; then echo "Missing SUPABASE_URL"; exit 1; fi
          if [ -z "${SUPABASE_SERVICE_ROLE_KEY:-}" ]; then echo "Missing SUPABASE_SERVICE_ROLE_KEY"; exit 1; fi

      - name: Hit Supabase Edge Function (POST)
        env:
          URL: ${{ secrets.SUPABASE_URL }}/functions/v1/pull-rfq-emails
          KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          BODY: ${{ secrets.FUNCTION_PAYLOAD }}
        # Usamos '>' para forzar UNA sola línea con todos los -H y evitar errores de indentación
        run: >
          STATUS=$(curl -sS -o response.json -w "%{http_code}"
          -X POST "$URL"
          -H "Authorization: Bearer $KEY"
          -H "apikey: $KEY"
          -H "Content-Type: application/json"
          --data "${BODY:-{}}");
          echo "HTTP Status: $STATUS";
          echo "Response body:"; cat response.json;
          if [ "${STATUS:0:1}" != "2" ]; then exit 1; fi

          # Falla el job si no es 2xx
          if [ "${STATUS:0:1}" != "2" ]; then
            exit 1
          fi
